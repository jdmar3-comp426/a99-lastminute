{"ast":null,"code":"var _jsxFileName = \"/Users/hawkeyeshi/Desktop/-COMP 426/a99-lastminute/frontend/src/components/Game/Game.js\";\nimport React, { useState } from \"react\";\nimport \"./Game.css\";\nexport default function Game(_ref) {\n  let {\n    username\n  } = _ref;\n  const [balance, setBal] = useState(0);\n  const [cpp, setCPP] = useState(0);\n  const [spending, setSpending] = useState(0);\n  const [revenue, setRevenue] = useState(0);\n  const [pepperoni, setPepperoni] = useState(0);\n  const [mushroom, setMushroom] = useState(0);\n  const [pepper, setPepper] = useState(0);\n  const [sausage, setSausage] = useState(0);\n  const [olive, setOlive] = useState(0);\n  const [cheese, setCheese] = useState(0);\n  const [firstLoad, setFirstLoad] = useState(true);\n  const [leaders, setLeaders] = useState([]); // Gets the balance the user has.\n\n  const getBal = () => {\n    fetch(\"/app/users/getbal/\" + username).then(res => res.json()).then(json => {\n      setBal(json.result);\n    });\n  }; // Gets the cost per pizza the user has.\n\n\n  const getCPP = () => {\n    fetch(\"/app/users/getcpp/\" + username).then(res => res.json()).then(json => {\n      setCPP(json.result);\n    });\n  }; // Gets the spending value the user has.\n\n\n  const getSpending = () => {\n    fetch(\"/app/users/getspending/\" + username).then(res => res.json()).then(json => {\n      setSpending(json.result);\n    });\n  }; // Gets the total revenue the user has.\n\n\n  const getRevenue = () => {\n    fetch(\"/app/users/getrevenue/\" + username).then(res => res.json()).then(json => {\n      setRevenue(json.result);\n    });\n  }; // Gets how many pepperoni the user has.\n\n\n  const getPepperoni = () => {\n    fetch(\"/app/users/getpepperoni/\" + username).then(res => res.json()).then(json => {\n      setPepperoni(json.result);\n    });\n  }; // Gets how many mushrooms the user has.\n\n\n  const getMushroom = () => {\n    fetch(\"/app/users/getmushroom/\" + username).then(res => res.json()).then(json => {\n      setMushroom(json.result);\n    });\n  }; // Gets how many peppers the user has.\n\n\n  const getPepper = () => {\n    fetch(\"/app/users/getpepper/\" + username).then(res => res.json()).then(json => {\n      setPepper(json.result);\n    });\n  }; // Gets how many sausages the user has.\n\n\n  const getSausage = () => {\n    fetch(\"/app/users/getsausage/\" + username).then(res => res.json()).then(json => {\n      setSausage(json.result);\n    });\n  }; // Gets how many olives the user has.\n\n\n  const getOlive = () => {\n    fetch(\"/app/users/getolive/\" + username).then(res => res.json()).then(json => {\n      setOlive(json.result);\n    });\n  }; // Gets how many cheese the user has.\n\n\n  const getCheese = () => {\n    fetch(\"/app/users/getcheese/\" + username).then(res => res.json()).then(json => {\n      setCheese(json.result);\n    });\n  };\n\n  const setGameState = (balance, cpp, spending, revenue, pepperoni, mushroom, pepper, sausage, olive, cheese) => {\n    var requestOptions = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        balance: balance,\n        cpp: cpp,\n        spending: spending,\n        revenue: revenue,\n        pepperoni: pepperoni,\n        mushroom: mushroom,\n        pepper: pepper,\n        sausage: sausage,\n        olive: olive,\n        cheese: cheese\n      })\n    };\n    fetch(\"/app/users/setgamestate/\" + username, requestOptions).then(res => res.json()).then(json => {\n      setBal(json.balance);\n      setCPP(json.cpp);\n      setSpending(json.spending);\n      setRevenue(json.revenue);\n      setPepperoni(json.pepperoni);\n      setMushroom(json.mushroom);\n      setPepper(json.pepper);\n      setSausage(json.sausage);\n      setOlive(json.olive);\n      setCheese(json.cheese);\n      updateLeaderboard();\n    });\n  };\n\n  const updateLeaderboard = () => {\n    fetch(\"/app/users/\").then(res => res.json()).then(json => {\n      var allUsersSorted = json.result.sort((a, b) => b.revenue - a.revenue);\n      var leaders = allUsersSorted.slice(0, 5);\n      leaders = leaders.map(leader => {\n        return {\n          username: leader.username,\n          revenue: leader.revenue\n        };\n      });\n      setLeaders(leaders); // for (let i = 0; i < allUsers.length; i++) {\n      //   allUsersArray.push(allUsers[i].username, allUsers[i].revenue]);\n      // }\n      // allUsersArray.sort(function(a,b){return(b[1]-a[1])});\n      // for (let i = 0; i < 5; i++) {\n      //   leaders[i] = allUsersArray[i];\n      // }\n      // // console.log(leaders[0][0]);\n      // setLeaders(leaders);\n    });\n  };\n\n  if (firstLoad) {\n    getBal();\n    getCPP();\n    getSpending();\n    getRevenue();\n    getPepperoni();\n    getMushroom();\n    getPepper();\n    getSausage();\n    getOlive();\n    getCheese();\n    setFirstLoad(false);\n    updateLeaderboard();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gameboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, \"Welcome to \", username, \"'s pizzeria\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"pizza_button\",\n    onClick: () => setGameState(balance + cpp, cpp, spending, revenue + cpp, pepperoni, mushroom, pepper, sausage, olive, cheese),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, \"BANK\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Balance: $ \", balance), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"Price per Pizza: $\", cpp), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \"Total Spending: $\", spending), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, \"Revenue: $\", revenue)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottomwrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"store\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"oven_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \"Store\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"oven\",\n    disabled: pepperoni === 1 || balance < 1000,\n    onClick: () => setGameState(balance - 1000, cpp + 3, spending + 1000, revenue, 1, mushroom, pepper, sausage, olive, cheese),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, \"Pepperoni: $1000\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"oven\",\n    disabled: mushroom === 1 || balance < 1500,\n    onClick: () => setGameState(balance - 1500, cpp + 5, spending + 1500, revenue, pepperoni, 1, pepper, sausage, olive, cheese),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, \"Mushrooms: $1500\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"oven\",\n    disabled: pepper === 1 || balance < 2000,\n    onClick: () => setGameState(balance - 2000, cpp + 10, spending + 2000, revenue, pepperoni, mushroom, 1, sausage, olive, cheese),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, \"Peppers: $2000\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"oven\",\n    disabled: sausage === 1 || balance < 500,\n    onClick: () => setGameState(balance - 500, cpp + 2, spending + 500, revenue, pepperoni, mushroom, pepper, 1, olive, cheese),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, \"Sausages: $500\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"oven\",\n    disabled: olive === 1 || balance < 3000,\n    onClick: () => setGameState(balance - 3000, cpp + 8, spending + 3000, revenue, pepperoni, mushroom, pepper, sausage, 1, cheese),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, \"Olives: $3000\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"oven\",\n    disabled: cheese === 1 || balance < 1500,\n    onClick: () => setGameState(balance - 1500, cpp + 5, spending + 1500, revenue, pepperoni, mushroom, pepper, sausage, olive, 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, \"Extra Cheese: $1500\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leaderboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, \"Leaderboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leaderboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, leaders.map(leader => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, leader[0], \": \", leader[1])))));\n}","map":{"version":3,"sources":["/Users/hawkeyeshi/Desktop/-COMP 426/a99-lastminute/frontend/src/components/Game/Game.js"],"names":["React","useState","Game","username","balance","setBal","cpp","setCPP","spending","setSpending","revenue","setRevenue","pepperoni","setPepperoni","mushroom","setMushroom","pepper","setPepper","sausage","setSausage","olive","setOlive","cheese","setCheese","firstLoad","setFirstLoad","leaders","setLeaders","getBal","fetch","then","res","json","result","getCPP","getSpending","getRevenue","getPepperoni","getMushroom","getPepper","getSausage","getOlive","getCheese","setGameState","requestOptions","method","headers","body","JSON","stringify","updateLeaderboard","allUsersSorted","sort","a","b","slice","map","leader"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AAEA,eAAe,SAASC,IAAT,OAA4B;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,EAAD,CAAtC,CAZyC,CAczC;;AACA,QAAM2B,MAAM,GAAG,MAAM;AACnBC,IAAAA,KAAK,CAAC,uBAAuB1B,QAAxB,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd3B,MAAAA,MAAM,CAAC2B,IAAI,CAACC,MAAN,CAAN;AACD,KAJH;AAKD,GAND,CAfyC,CAuBzC;;;AACA,QAAMC,MAAM,GAAG,MAAM;AACnBL,IAAAA,KAAK,CAAC,uBAAuB1B,QAAxB,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdzB,MAAAA,MAAM,CAACyB,IAAI,CAACC,MAAN,CAAN;AACD,KAJH;AAKD,GAND,CAxByC,CAgCzC;;;AACA,QAAME,WAAW,GAAG,MAAM;AACxBN,IAAAA,KAAK,CAAC,4BAA4B1B,QAA7B,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdvB,MAAAA,WAAW,CAACuB,IAAI,CAACC,MAAN,CAAX;AACD,KAJH;AAKD,GAND,CAjCyC,CAyCzC;;;AACA,QAAMG,UAAU,GAAG,MAAM;AACvBP,IAAAA,KAAK,CAAC,2BAA2B1B,QAA5B,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdrB,MAAAA,UAAU,CAACqB,IAAI,CAACC,MAAN,CAAV;AACD,KAJH;AAKD,GAND,CA1CyC,CAkDzC;;;AACA,QAAMI,YAAY,GAAG,MAAM;AACzBR,IAAAA,KAAK,CAAC,6BAA6B1B,QAA9B,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdnB,MAAAA,YAAY,CAACmB,IAAI,CAACC,MAAN,CAAZ;AACD,KAJH;AAKD,GAND,CAnDyC,CA2DzC;;;AACA,QAAMK,WAAW,GAAG,MAAM;AACxBT,IAAAA,KAAK,CAAC,4BAA4B1B,QAA7B,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdjB,MAAAA,WAAW,CAACiB,IAAI,CAACC,MAAN,CAAX;AACD,KAJH;AAKD,GAND,CA5DyC,CAoEzC;;;AACA,QAAMM,SAAS,GAAG,MAAM;AACtBV,IAAAA,KAAK,CAAC,0BAA0B1B,QAA3B,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdf,MAAAA,SAAS,CAACe,IAAI,CAACC,MAAN,CAAT;AACD,KAJH;AAKD,GAND,CArEyC,CA6EzC;;;AACA,QAAMO,UAAU,GAAG,MAAM;AACvBX,IAAAA,KAAK,CAAC,2BAA2B1B,QAA5B,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdb,MAAAA,UAAU,CAACa,IAAI,CAACC,MAAN,CAAV;AACD,KAJH;AAKD,GAND,CA9EyC,CAsFzC;;;AACA,QAAMQ,QAAQ,GAAG,MAAM;AACrBZ,IAAAA,KAAK,CAAC,yBAAyB1B,QAA1B,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdX,MAAAA,QAAQ,CAACW,IAAI,CAACC,MAAN,CAAR;AACD,KAJH;AAKD,GAND,CAvFyC,CA+FzC;;;AACA,QAAMS,SAAS,GAAG,MAAM;AACtBb,IAAAA,KAAK,CAAC,0BAA0B1B,QAA3B,CAAL,CACG2B,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdT,MAAAA,SAAS,CAACS,IAAI,CAACC,MAAN,CAAT;AACD,KAJH;AAKD,GAND;;AAQA,QAAMU,YAAY,GAAG,CACnBvC,OADmB,EAEnBE,GAFmB,EAGnBE,QAHmB,EAInBE,OAJmB,EAKnBE,SALmB,EAMnBE,QANmB,EAOnBE,MAPmB,EAQnBE,OARmB,EASnBE,KATmB,EAUnBE,MAVmB,KAWhB;AACH,QAAIsB,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,OADW;AAEnBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFU;AAKnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB7C,QAAAA,OAAO,EAAEA,OADU;AAEnBE,QAAAA,GAAG,EAAEA,GAFc;AAGnBE,QAAAA,QAAQ,EAAEA,QAHS;AAInBE,QAAAA,OAAO,EAAEA,OAJU;AAKnBE,QAAAA,SAAS,EAAEA,SALQ;AAMnBE,QAAAA,QAAQ,EAAEA,QANS;AAOnBE,QAAAA,MAAM,EAAEA,MAPW;AAQnBE,QAAAA,OAAO,EAAEA,OARU;AASnBE,QAAAA,KAAK,EAAEA,KATY;AAUnBE,QAAAA,MAAM,EAAEA;AAVW,OAAf;AALa,KAArB;AAkBAO,IAAAA,KAAK,CAAC,6BAA6B1B,QAA9B,EAAwCyC,cAAxC,CAAL,CACGd,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd3B,MAAAA,MAAM,CAAC2B,IAAI,CAAC5B,OAAN,CAAN;AACAG,MAAAA,MAAM,CAACyB,IAAI,CAAC1B,GAAN,CAAN;AACAG,MAAAA,WAAW,CAACuB,IAAI,CAACxB,QAAN,CAAX;AACAG,MAAAA,UAAU,CAACqB,IAAI,CAACtB,OAAN,CAAV;AACAG,MAAAA,YAAY,CAACmB,IAAI,CAACpB,SAAN,CAAZ;AACAG,MAAAA,WAAW,CAACiB,IAAI,CAAClB,QAAN,CAAX;AACAG,MAAAA,SAAS,CAACe,IAAI,CAAChB,MAAN,CAAT;AACAG,MAAAA,UAAU,CAACa,IAAI,CAACd,OAAN,CAAV;AACAG,MAAAA,QAAQ,CAACW,IAAI,CAACZ,KAAN,CAAR;AACAG,MAAAA,SAAS,CAACS,IAAI,CAACV,MAAN,CAAT;AACA4B,MAAAA,iBAAiB;AAClB,KAdH;AAeD,GA7CD;;AA+CA,QAAMA,iBAAiB,GAAG,MAAM;AAC9BrB,IAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,UAAImB,cAAc,GAAGnB,IAAI,CAACC,MAAL,CAAYmB,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAC5C,OAAF,GAAY2C,CAAC,CAAC3C,OAAzC,CAArB;AACA,UAAIgB,OAAO,GAAGyB,cAAc,CAACI,KAAf,CAAqB,CAArB,EAAwB,CAAxB,CAAd;AAEA7B,MAAAA,OAAO,GAAGA,OAAO,CAAC8B,GAAR,CAAaC,MAAD,IAAY;AAChC,eAAO;AAAEtD,UAAAA,QAAQ,EAAEsD,MAAM,CAACtD,QAAnB;AAA6BO,UAAAA,OAAO,EAAE+C,MAAM,CAAC/C;AAA7C,SAAP;AACD,OAFS,CAAV;AAIAiB,MAAAA,UAAU,CAACD,OAAD,CAAV,CARc,CAUd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KArBH;AAsBD,GAvBD;;AAyBA,MAAIF,SAAJ,EAAe;AACbI,IAAAA,MAAM;AACNM,IAAAA,MAAM;AACNC,IAAAA,WAAW;AACXC,IAAAA,UAAU;AACVC,IAAAA,YAAY;AACZC,IAAAA,WAAW;AACXC,IAAAA,SAAS;AACTC,IAAAA,UAAU;AACVC,IAAAA,QAAQ;AACRC,IAAAA,SAAS;AACTjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAyB,IAAAA,iBAAiB;AAClB;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqC/C,QAArC,gBADF,eAGE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,OAAO,EAAE,MACPwC,YAAY,CACVvC,OAAO,GAAGE,GADA,EAEVA,GAFU,EAGVE,QAHU,EAIVE,OAAO,GAAGJ,GAJA,EAKVM,SALU,EAMVE,QANU,EAOVE,MAPU,EAQVE,OARU,EASVE,KATU,EAUVE,MAVU,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAmBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAelB,OAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBE,GAAtB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqBE,QAArB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcE,OAAd,CAJF,CAFF,CAnBF,CAHF,eAiCE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,QAAQ,EAAEE,SAAS,KAAK,CAAd,IAAmBR,OAAO,GAAG,IAFzC;AAGE,IAAA,OAAO,EAAE,MACPuC,YAAY,CACVvC,OAAO,GAAG,IADA,EAEVE,GAAG,GAAG,CAFI,EAGVE,QAAQ,GAAG,IAHD,EAIVE,OAJU,EAKV,CALU,EAMVI,QANU,EAOVE,MAPU,EAQVE,OARU,EASVE,KATU,EAUVE,MAVU,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAsBE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,QAAQ,EAAER,QAAQ,KAAK,CAAb,IAAkBV,OAAO,GAAG,IAFxC;AAGE,IAAA,OAAO,EAAE,MACPuC,YAAY,CACVvC,OAAO,GAAG,IADA,EAEVE,GAAG,GAAG,CAFI,EAGVE,QAAQ,GAAG,IAHD,EAIVE,OAJU,EAKVE,SALU,EAMV,CANU,EAOVI,MAPU,EAQVE,OARU,EASVE,KATU,EAUVE,MAVU,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAtBF,eA0CE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,QAAQ,EAAEN,MAAM,KAAK,CAAX,IAAgBZ,OAAO,GAAG,IAFtC;AAGE,IAAA,OAAO,EAAE,MACPuC,YAAY,CACVvC,OAAO,GAAG,IADA,EAEVE,GAAG,GAAG,EAFI,EAGVE,QAAQ,GAAG,IAHD,EAIVE,OAJU,EAKVE,SALU,EAMVE,QANU,EAOV,CAPU,EAQVI,OARU,EASVE,KATU,EAUVE,MAVU,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1CF,eA8DE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,QAAQ,EAAEJ,OAAO,KAAK,CAAZ,IAAiBd,OAAO,GAAG,GAFvC;AAGE,IAAA,OAAO,EAAE,MACPuC,YAAY,CACVvC,OAAO,GAAG,GADA,EAEVE,GAAG,GAAG,CAFI,EAGVE,QAAQ,GAAG,GAHD,EAIVE,OAJU,EAKVE,SALU,EAMVE,QANU,EAOVE,MAPU,EAQV,CARU,EASVI,KATU,EAUVE,MAVU,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA9DF,eAkFE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,QAAQ,EAAEF,KAAK,KAAK,CAAV,IAAehB,OAAO,GAAG,IAFrC;AAGE,IAAA,OAAO,EAAE,MACPuC,YAAY,CACVvC,OAAO,GAAG,IADA,EAEVE,GAAG,GAAG,CAFI,EAGVE,QAAQ,GAAG,IAHD,EAIVE,OAJU,EAKVE,SALU,EAMVE,QANU,EAOVE,MAPU,EAQVE,OARU,EASV,CATU,EAUVI,MAVU,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlFF,eAsGE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,QAAQ,EAAEA,MAAM,KAAK,CAAX,IAAgBlB,OAAO,GAAG,IAFtC;AAGE,IAAA,OAAO,EAAE,MACPuC,YAAY,CACVvC,OAAO,GAAG,IADA,EAEVE,GAAG,GAAG,CAFI,EAGVE,QAAQ,GAAG,IAHD,EAIVE,OAJU,EAKVE,SALU,EAMVE,QANU,EAOVE,MAPU,EAQVE,OARU,EASVE,KATU,EAUV,CAVU,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAtGF,CADF,eA6HE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA7HF,eA8HE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,OAAO,CAAC8B,GAAR,CAAaC,MAAD,iBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAAC,CAAD,CADT,QACgBA,MAAM,CAAC,CAAD,CADtB,CADD,CADH,CA9HF,CAjCF,CADF;AA0KD","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Game.css\";\n\nexport default function Game({ username }) {\n  const [balance, setBal] = useState(0);\n  const [cpp, setCPP] = useState(0);\n  const [spending, setSpending] = useState(0);\n  const [revenue, setRevenue] = useState(0);\n  const [pepperoni, setPepperoni] = useState(0);\n  const [mushroom, setMushroom] = useState(0);\n  const [pepper, setPepper] = useState(0);\n  const [sausage, setSausage] = useState(0);\n  const [olive, setOlive] = useState(0);\n  const [cheese, setCheese] = useState(0);\n  const [firstLoad, setFirstLoad] = useState(true);\n  const [leaders, setLeaders] = useState([]);\n\n  // Gets the balance the user has.\n  const getBal = () => {\n    fetch(\"/app/users/getbal/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setBal(json.result);\n      });\n  };\n\n  // Gets the cost per pizza the user has.\n  const getCPP = () => {\n    fetch(\"/app/users/getcpp/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setCPP(json.result);\n      });\n  };\n\n  // Gets the spending value the user has.\n  const getSpending = () => {\n    fetch(\"/app/users/getspending/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setSpending(json.result);\n      });\n  };\n\n  // Gets the total revenue the user has.\n  const getRevenue = () => {\n    fetch(\"/app/users/getrevenue/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setRevenue(json.result);\n      });\n  };\n\n  // Gets how many pepperoni the user has.\n  const getPepperoni = () => {\n    fetch(\"/app/users/getpepperoni/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setPepperoni(json.result);\n      });\n  };\n\n  // Gets how many mushrooms the user has.\n  const getMushroom = () => {\n    fetch(\"/app/users/getmushroom/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setMushroom(json.result);\n      });\n  };\n\n  // Gets how many peppers the user has.\n  const getPepper = () => {\n    fetch(\"/app/users/getpepper/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setPepper(json.result);\n      });\n  };\n\n  // Gets how many sausages the user has.\n  const getSausage = () => {\n    fetch(\"/app/users/getsausage/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setSausage(json.result);\n      });\n  };\n\n  // Gets how many olives the user has.\n  const getOlive = () => {\n    fetch(\"/app/users/getolive/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setOlive(json.result);\n      });\n  };\n\n  // Gets how many cheese the user has.\n  const getCheese = () => {\n    fetch(\"/app/users/getcheese/\" + username)\n      .then((res) => res.json())\n      .then((json) => {\n        setCheese(json.result);\n      });\n  };\n\n  const setGameState = (\n    balance,\n    cpp,\n    spending,\n    revenue,\n    pepperoni,\n    mushroom,\n    pepper,\n    sausage,\n    olive,\n    cheese\n  ) => {\n    var requestOptions = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        balance: balance,\n        cpp: cpp,\n        spending: spending,\n        revenue: revenue,\n        pepperoni: pepperoni,\n        mushroom: mushroom,\n        pepper: pepper,\n        sausage: sausage,\n        olive: olive,\n        cheese: cheese,\n      }),\n    };\n    fetch(\"/app/users/setgamestate/\" + username, requestOptions)\n      .then((res) => res.json())\n      .then((json) => {\n        setBal(json.balance);\n        setCPP(json.cpp);\n        setSpending(json.spending);\n        setRevenue(json.revenue);\n        setPepperoni(json.pepperoni);\n        setMushroom(json.mushroom);\n        setPepper(json.pepper);\n        setSausage(json.sausage);\n        setOlive(json.olive);\n        setCheese(json.cheese);\n        updateLeaderboard();\n      });\n  };\n\n  const updateLeaderboard = () => {\n    fetch(\"/app/users/\")\n      .then((res) => res.json())\n      .then((json) => {\n        var allUsersSorted = json.result.sort((a, b) => b.revenue - a.revenue);\n        var leaders = allUsersSorted.slice(0, 5);\n\n        leaders = leaders.map((leader) => {\n          return { username: leader.username, revenue: leader.revenue };\n        });\n\n        setLeaders(leaders);\n\n        // for (let i = 0; i < allUsers.length; i++) {\n        //   allUsersArray.push(allUsers[i].username, allUsers[i].revenue]);\n        // }\n        // allUsersArray.sort(function(a,b){return(b[1]-a[1])});\n        // for (let i = 0; i < 5; i++) {\n        //   leaders[i] = allUsersArray[i];\n        // }\n        // // console.log(leaders[0][0]);\n        // setLeaders(leaders);\n      });\n  };\n\n  if (firstLoad) {\n    getBal();\n    getCPP();\n    getSpending();\n    getRevenue();\n    getPepperoni();\n    getMushroom();\n    getPepper();\n    getSausage();\n    getOlive();\n    getCheese();\n    setFirstLoad(false);\n    updateLeaderboard();\n  }\n\n  return (\n    <div className=\"gameboard\">\n      <div className=\"welcome\">Welcome to {username}'s pizzeria</div>\n\n      <div className=\"wrapper\">\n        <button\n          className=\"pizza_button\"\n          onClick={() =>\n            setGameState(\n              balance + cpp,\n              cpp,\n              spending,\n              revenue + cpp,\n              pepperoni,\n              mushroom,\n              pepper,\n              sausage,\n              olive,\n              cheese\n            )\n          }\n        ></button>\n\n        <div className=\"bank\">\n          BANK\n          <div className=\"text\">\n            <p>Balance: $ {balance}</p>\n            <p>Price per Pizza: ${cpp}</p>\n            <p>Total Spending: ${spending}</p>\n            <p>Revenue: ${revenue}</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bottomwrapper\">\n        <div className=\"store\">\n          <h1 className=\"oven_header\">Store</h1>\n          <button\n            className=\"oven\"\n            disabled={pepperoni === 1 || balance < 1000}\n            onClick={() =>\n              setGameState(\n                balance - 1000,\n                cpp + 3,\n                spending + 1000,\n                revenue,\n                1,\n                mushroom,\n                pepper,\n                sausage,\n                olive,\n                cheese\n              )\n            }\n          >\n            Pepperoni: $1000\n          </button>\n          <button\n            className=\"oven\"\n            disabled={mushroom === 1 || balance < 1500}\n            onClick={() =>\n              setGameState(\n                balance - 1500,\n                cpp + 5,\n                spending + 1500,\n                revenue,\n                pepperoni,\n                1,\n                pepper,\n                sausage,\n                olive,\n                cheese\n              )\n            }\n          >\n            Mushrooms: $1500\n          </button>\n          <button\n            className=\"oven\"\n            disabled={pepper === 1 || balance < 2000}\n            onClick={() =>\n              setGameState(\n                balance - 2000,\n                cpp + 10,\n                spending + 2000,\n                revenue,\n                pepperoni,\n                mushroom,\n                1,\n                sausage,\n                olive,\n                cheese\n              )\n            }\n          >\n            Peppers: $2000\n          </button>\n          <button\n            className=\"oven\"\n            disabled={sausage === 1 || balance < 500}\n            onClick={() =>\n              setGameState(\n                balance - 500,\n                cpp + 2,\n                spending + 500,\n                revenue,\n                pepperoni,\n                mushroom,\n                pepper,\n                1,\n                olive,\n                cheese\n              )\n            }\n          >\n            Sausages: $500\n          </button>\n          <button\n            className=\"oven\"\n            disabled={olive === 1 || balance < 3000}\n            onClick={() =>\n              setGameState(\n                balance - 3000,\n                cpp + 8,\n                spending + 3000,\n                revenue,\n                pepperoni,\n                mushroom,\n                pepper,\n                sausage,\n                1,\n                cheese\n              )\n            }\n          >\n            Olives: $3000\n          </button>\n          <button\n            className=\"oven\"\n            disabled={cheese === 1 || balance < 1500}\n            onClick={() =>\n              setGameState(\n                balance - 1500,\n                cpp + 5,\n                spending + 1500,\n                revenue,\n                pepperoni,\n                mushroom,\n                pepper,\n                sausage,\n                olive,\n                1\n              )\n            }\n          >\n            Extra Cheese: $1500\n          </button>\n        </div>\n\n        <div className=\"leaderboard\">Leaderboard</div>\n        <div className=\"leaderboard\">\n          {leaders.map((leader) => (\n            <p>\n              {leader[0]}: {leader[1]}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}